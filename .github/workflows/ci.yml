name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [1.21, 1.22]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ matrix.go-version }}

    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Download dependencies
      run: go mod download

    - name: Run tests
      run: go test -v -race -coverprofile=coverage.out ./...

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.out
        flags: unittests

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.21

    - name: Run golangci-lint
      uses: golangci/golangci-lint-action@v3
      with:
        version: latest

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [test, lint]
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.21

    - name: Build CLI
      run: go build -o bin/lucide-gen ./cmd/lucide-gen

    - name: Test CLI
      run: |
        ./bin/lucide-gen -help
        ./bin/lucide-gen -version

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: lucide-gen-linux
        path: bin/lucide-gen

  example:
    name: Test Examples
    runs-on: ubuntu-latest
    needs: [build]
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.21

    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: lucide-gen-linux
        path: bin/

    - name: Make binary executable
      run: chmod +x bin/lucide-gen

    - name: Test dry run
      run: |
        ./bin/lucide-gen -output ./test-output -dry-run -verbose

    - name: Test basic generation
      run: |
        ./bin/lucide-gen -output ./test-output -categories "navigation,actions" -verbose
        
    - name: Verify output
      run: |
        test -f ./test-output/icons_templ.go
        test -f ./test-output/registry_templ.go
        test -f ./test-output/categories_templ.go
        echo "âœ… All expected files generated"